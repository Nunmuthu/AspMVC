9. introduction
+++++++++++++++++++++++++++++++++++++++++++++++++++++
Routing
View
View Models
10.Action Results -> output of actions
++++++++++++++++++++++++++++++++++++++++++++++++++++++
Controller
ActionResult is the base class for all action resultss in Asp.net mVC
View -> Inherited from the base method Controller class
ActionResult -> we can change it to ViewResult

Type -> Helper Method
ViewResult -> View()
PartialViewResult -> PartialView()
ContentResult -> Content()
RedirectResult -> Redirect()
RedirectToRouteResult -> RedirectToAction()
JsonResult -> Json()
FileResult -> File()
HttpNotFoundResult -> HttpNotFound()

EmptyResult

11.Action Parameters -> Input of action
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Parameter Sources:
In the Url: movies/edit/1
In the query string: movies/edit?id=1
In the form data: id=1

http://localhost:57027/Movies/Edit/1
http://localhost:57027/Movies/Edit?id=1

http://localhost:57027/Movies/Edit?movieid=1


id name inherits from RoutingConfig.cs

int? pageIndex, string  sortBy
In C# string type is nullable. so no need to specify optional

http://localhost:57027/Movies/Index/
pageIndex=1&sortBy=Name

http://localhost:57027/Movies/Index/?sortBy=hello
pageIndex=1&sortBy=hello

http://localhost:57027/Movies/Index/?pageIndex=2&sortBy=hello
pageIndex=2&sortBy=hello

12.Convetion based routing -> Custom routes
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

http://localhost:57027/movies/released/2020/06


http://localhost:57027/movies/released/2020/6 -> error because of constraint

                new { year=@"\d{4}", month=@"\d{2}"}

                new { year=@"2015|2016", month=@"\d{2}"}
				
13.Attribute Routing
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            //Enable attribute routing
            routes.MapMvcAttributeRoutes();
			
			[Route("movies/released/{year}/{month:regex(\\d{2})}:range(1,12)")]
			
ASP.NET MVC Attribute Route Constraints:
			
min
max
minlength
maxlength
int
float
guid

14.Passing Data to views -> Few ways to pass data to the views
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1.ViewData tyepe viewDataDictionary
            ViewData["Movie"] = movie;
            return View();
            //return View(movie);
2.ViewBag
3.Model

15.View Models
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
http://localhost:57027/Movies/Random
ViewModel -> Wrap movie and customer list and pass it to movie

